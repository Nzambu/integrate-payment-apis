name: Authentication
description: |-

  Only authenticated users can make the get, post, put, patch and delete requests using the endpoints provided in this section. 
  Integration into different languages is shown using relevant example requests. Follow the examples as a guide showing how to
  provide the parameters in the right place.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Authentication - Login'
      description: |-
        Users sign up or log in by making a post request with user email and password. The endpoint is open to the public to aid users gain access to their accounts.
        The login credentials are explained in the body section below. Integration in sample languages is shown with example requests. The desired response is as
        shown in example response 200.
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The primary email for the user''s account.'
        required: true
        example: et
        type: string
      password:
        name: password
        description: 'The secret word for the user''s account.'
        required: true
        example: quia
        type: string
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "type": "profile",
                  "id": "1",
                  "token": {
                      "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiODY1YjRjMjk2Nzg0YjdmMTI3MjE1MWIzYTRmZWY4MDY1YzIxNWJjYWJmZjYyYWFlODkyYmNhOTg3ZWViMWE4MzNmOWZkNDMwZmU5Y2ZhMTMiLCJpYXQiOjE2MjcwNDQyMzAuNDk1OTIyLCJuYmYiOjE2MjcwNDQyMzAuNDk1OTM0LCJleHAiOjE2NTg1ODAyMzAuMzcxNjIzLCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.Gv30f39xc8s3Eg1uFk61mbRtcIrGV9bGsbpF0QDcHTN_EzYt5XR43RBw-leQMSEd1ttzic2lk23-NX_ycOODyyg5nOLfVroCqsyM3AwhQyc5E9hTPeqlmq2CWYrE4d4PyESmOEr4M8AMITZrnUfl9J1kdFFX56bbHOMxWUBffxeyyZ3weH11E9959Uy2WYskTUIio_eb9HbTRU-ZWs5ACwkRscjafL5yyixXpPOSh7nLf0IhL-ccQ9hA2tWYV3kMx8_vaQ_UaIyp2-rNQZQleff-56A3X0vro9-NzrjYvDbxZPnudh21kPuAEh5QLex6LN6EhwL0vkb98ujWokAwDzSveKOVG2z8at8k6NSTtG2Wmxn_jNBm_yS1T_9JjLHO4O2wOCrhsjlXAeL86H0QSu00yZXNVGF9PHHqt7FWzAdKYxyyx6GPuHh6mVYYaUzxli5opqZ9WqSRBTGvKqjqjVf05XH922RlJY6y06CTu9qqFp9nSeHtXcINb1P8RWMFnygyxVkAAvPZNzHWQ7DLxatyS_QRB6jbpmTOW2tAzKF06-Fl34NFoSdSbNP3M2hp0IX85wkLE5ZS_zGq1kFK_xUTrK3W3-Lem6emDyd3F4hjZJwJTwQREbAw12tbFxItOFijr6-u6hepXybiu5NXXocmS_h2j1rrm4r0DkbQC0Y",
                      "type": "Bearer Token"
                  },
                  "attributes": {
                      "first_name": "Patrick",
                      "middle_name": null,
                      "last_name": "Nzambu"
                  },
                  "relationships": {
                      "email": [
                          [
                              {
                                  "type": "email",
                                  "id": "1",
                                  "attributes": {
                                      "email": "patricknzambu@gmail.com",
                                      "primary": 1
                                  },
                                  "links": {
                                      "self": "http://localhost/microservice/gateway/public/api/user/1/email/1"
                                  }
                              }
                          ]
                      ]
                  },
                  "links": {
                      "self": "http://localhost/microservice/gateway/public/api/profile/1"
                  }
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      title: 'Authentication - Register'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user. Must not be greater than 45 characters.'
        required: true
        example: ejvnxlkeuzmkbap
        type: string
      middle_name:
        name: middle_name
        description: 'The middle name of the user. Must not be greater than 45 characters.'
        required: false
        example: onlywdxd
        type: string
      last_name:
        name: last_name
        description: 'The last name of the user. Must not be greater than 45 characters.'
        required: true
        example: pfudghjqfheddxahtlvj
        type: string
      email:
        name: email
        description: 'The primary email for the user''s account. Must be a valid email address.'
        required: true
        example: abeatty@example.net
        type: string
      password:
        name: password
        description: 'The secret word for user''s account. Must be at least 8 characters.'
        required: true
        example: fufwcz
        type: string
      password_confirmation:
        name: password_confirmation
        description: 'A confirmation of the secret word for the user''s account. Must be at least 8 characters.'
        required: true
        example: qoiozosg
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: 'Authentication - Logout'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "You have been successfully logged out!"
          }
        headers: []
        description: '200'
    responseFields: []
