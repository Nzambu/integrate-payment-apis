name: Profile
description: |-

  Only authenticated users can make the get, post, put, patch and delete requests using the endpoints provided in this section. 
  Integration into different languages is shown using relevant example requests. Follow the examples as a guide showing how to
  provide the parameters in the right place.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      title: 'Profile - List'
      description: |-
        Make a get request using the endpoint to obtain a list of all available records. The endpoint has no route parameters as seen on the
        given example request. The desired response will be similar to the example response shown.
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          { "data" : [
                  {
                      "type": "profile",
                      "id": "1",
                      "attributes": {
                          "name": "Brandt Abshire",
                          "email": "nkuhn@example.com"
                      }
                  },
                  {
                      "type": "profile",
                      "id": "2",
                      "attributes": {
                          "name": "Cicero Franecki DVM",
                          "email": "lwindler@example.org"
                      }
                  }
              ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/profile
    metadata:
      title: 'Profile - Create'
      description: |-
        Make a post request to create a new record. Provided form data should be in json format and supplied according to the given example request.
        The expected response should be similar to example response shown.
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The full name of the customer profile'
        required: true
        example: alias
        type: string
      email:
        name: email
        description: 'The email of the customer'
        required: true
        example: cupiditate
        type: string
    responses:
      -
        status: 201
        content: |-
          {
              "profile": {
                  "type": "profile",
                  "id": "2",
                  "attributes": {
                      "name": "Brandt Abshire",
                      "email": "nkuhn@example.com"
                  }
              }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/profile/{id}'
    metadata:
      title: 'Profile - Show'
      description: |-
        Make a get request to select a particular record. Provide the id of the record at the end of the route as shown on the given example request.
        The expected response should be similar to example response shown.
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: odit
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "profile": {
                  "type": "profile",
                  "id": "2",
                  "attributes": {
                      "name": "Brandt Abshire",
                      "email": "nkuhn@example.com"
                  }
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/profile/{id}'
    metadata:
      title: 'Profile - Update'
      description: |-
        Make a put or patch request to update the record. Provide the id of the record at the end of the route as shown on the given example request.
        The form data should be in json format and provided according to the example request. The expected response should be similar to example
        response shown.
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: similique
        type: string
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The full name of the customer profile'
        required: true
        example: quis
        type: string
      email:
        name: email
        description: 'The email of the customer'
        required: true
        example: rerum
        type: string
    responses:
      -
        status: 200
        content: |-
          {
              "profile": {
                  "type": "profile",
                  "id": "2",
                  "attributes": {
                      "name": "Brandt Abshire",
                      "email": "nkuhn@example.com"
                  }
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/profile/{id}'
    metadata:
      title: 'Profile - Delete'
      description: |-
        Make a delete request to remove the record. Provide the id of the record at the end of the route as shown on the given example request.
        The expected response should be similar to example response shown.
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: numquam
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "profile": {
                  "type": "profile",
                  "id": "2",
                  "attributes": {
                      "name": "Brandt Abshire",
                      "email": "nkuhn@example.com"
                  }
              }
          }
        headers: []
        description: '200'
    responseFields: []
